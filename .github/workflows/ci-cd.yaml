name: 'CI/CD for testing the app and deploy it on Google Cloud'

on:
  push:
    branches:
      - master  # Trigger on pushes to the master branch

jobs:
  # Continuous Integration Job
  test:
    name: 'Run tests'
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.5

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Export environment variables for testing from secret ENV_VARS_TEST
      - name: Export environment variables from secrets
        run: |
          echo "Exporting ENV_VARS_TEST secret as environment variables"
          for var in $(echo "${{ secrets.ENV_VARS_TEST }}" | tr ',' ' '); do
            echo "$var" >> $GITHUB_ENV
          done

      # Run tests
      - name: Run tests
        run: |
          pytest tests --disable-warnings -v

  # Continuous Deployment Job
  deploy:
    name: 'Deploy the app to Google Cloud Run'
    needs: test  # This job runs only if the test job passes
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'  # Only deploy from the master branch
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Authenticate to Google Cloud
      - id: 'auth'
        name: 'Google Cloud Auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ vars.GCP_PROJECT_ID }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker
        run: |
          gcloud auth configure-docker ${{ vars.GCP_REGION }}-docker.pkg.dev

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -f DockerfileProd -t ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GCP_ARTIFACT_REPOSITORY }}/${{ vars.IMAGE_NAME }} .

      # Push Docker image to Artifact Registry
      - name: Push Docker image to Artifact Registry
        run: |
          docker push ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GCP_ARTIFACT_REPOSITORY }}/${{ vars.IMAGE_NAME }}

      # Deploy to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy smile-sales-api-products \
            --image=${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GCP_ARTIFACT_REPOSITORY }}/${{ vars.IMAGE_NAME }} \
            --region=${{ vars.GCP_REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --port=8000 \
            --set-env-vars '${{ secrets.ENV_VARS_PROD }}' \
            --cpu=1 \
            --memory=512Mi
